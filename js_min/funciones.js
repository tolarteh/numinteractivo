!function(t){var s={mayor:function(){var t=0;for(i=this.cont_i;i<this.A.length;i++)for(j=this.cont_j;j<this.A[i].length;j++)Math.abs(this.A[i][j])>t&&(t=Math.abs(this.A[i][j]),this.filaTemp=i+1,this.columTemp=j+1);var s="Se busca el elemento mayor, en valor absoluto, entre los $a_{i j}$ con $i = "+(this.cont_i+1)+", \\ldots, n$ y $j = "+(this.cont_j+1)+", \\ldots, n$. En este caso el mayor es $|a_{"+this.filaTemp+" "+this.columTemp+"}| = "+this.round(Math.abs(this.A[this.filaTemp-1][this.columTemp-1]),1)+"$, entonces se intercambia la columna $"+this.columTemp+"$ con la $"+(this.cont_i+1)+"$ y la fila $"+this.filaTemp+"$ con la $"+(this.cont_i+1)+"$.";return this.print(s),this},mayorFila:function(){for(var t=0,i=0,s=this.cont_i;s<this.A[this.cont_j].length;s++)Math.abs(this.A[s][this.cont_j])>t&&(t=Math.abs(this.A[s][this.cont_j]),i=s+1,this.filaTemp=s+1);var o="Se busca el elemento mayor, en valor absoluto, entre los $a_{i "+(this.cont_i+1)+"}$ con $i = "+(this.cont_i+1)+", \\ldots, n$. En este caso el mayor es $|a_{"+i+" "+(this.cont_i+1)+"}| = "+this.round(t,1)+"$, entonces se intercambia la fila $"+i+"$ con la $"+(this.cont_i+1)+"$, obteniendo como resultado:";return this.print(o),this},mayoresDeFilas:function(){for(var t=0,i=0;i<this.A.length;i++){for(var s=0;s<this.A[i].length;s++)Math.abs(this.A[i][s])>t&&(t=Math.abs(this.A[i][s]));this.mayoresFilas.push(t),t=0}var o="Se define un vector, $mayoresFilas$ que almacena los elementos mayores de las filas en valor absoluto:<br>";o+="$$mayoresFilas = "+JSON.stringify(this.mayoresFilas)+"$$",this.print(o)},resultados:function(){for(var t=[],i=[],s=this.cont_i;s<this.A[this.cont_j].length;s++)i.push(Math.abs(this.A[s][this.cont_j])),aux=Math.abs(this.A[s][this.cont_j])/this.notZero(this.mayoresFilas[s]),t.push(this.round(aux,1));temp=0;for(var s=this.cont_i;s<t.length;s++)t[s]>temp&&(temp=t[s],this.filaTemp=this.cont_i+s+1);var o="Se busca el elemento mayor, en valor absoluto, relativo a sus filas entre los $a_{i "+(this.cont_i+1)+"}$ con $i = "+(this.cont_i+1)+", \\ldots, n$. Para ello, se dividen los elementos $a_{i "+(this.cont_i+1)+"}$ con los correspondientes elementos del vector $mayoresFilas$. Los resultados son: <br>";return o+="$$\\frac{|a_{i "+(this.cont_i+1)+"}|} {mayoresFilas} = \\frac{"+JSON.stringify(i)+"} {"+JSON.stringify(this.mayoresFilas)+"} = "+JSON.stringify(t)+"$$",this.print(o),this},cambioFilas:function(t){var i,s;s=this.b[this.cont_i],this.b[this.cont_i]=this.b[this.filaTemp-1],this.b[this.filaTemp-1]=s;for(var o=this.cont_j;o<this.A.length;o++){i=this.A[this.cont_i][o];for(var n=0;n<this.A[o].length;n++)this.A[this.cont_i][o]=this.A[this.filaTemp-1][o];this.A[this.filaTemp-1][o]=i}if(1==t){var h="En este caso la posición $"+this.filaTemp+"$ del resultado tiene el número mayor. Entonces se intercambia la fila $"+(this.cont_i+1)+"$ con la $"+this.filaTemp+"$. Este cambio también afecta al vector $mayoresFilas$. Obtenemos entonces:<br>";this.print(h),s=this.mayoresFilas[this.cont_i],this.mayoresFilas[this.cont_i]=this.mayoresFilas[this.filaTemp-1],this.mayoresFilas[this.filaTemp-1]=s,this.print("$$mayoresFilas = "+JSON.stringify(this.mayoresFilas)+"$$"),this.printAb()}return this},cambioColumnas:function(){var t,s;for(s=this.numeroColumna[this.cont_j],this.numeroColumna[this.cont_j]=this.numeroColumna[this.columTemp-1],this.numeroColumna[this.columTemp-1]=s,i=0;i<this.A.length;i++){for(t=this.A[i][this.cont_j],n=this.cont_j;n<this.A[i].length;n++)this.A[i][this.cont_j]=this.A[i][this.columTemp-1];this.A[i][this.columTemp-1]=t}for(var o="Al intercambiar las columnas las variables del sistema se reordenan del siguiente modo: $",n=0;n<this.numeroColumna.length;n++)o+="x_"+this.numeroColumna[n],n<this.numeroColumna.length-1&&(o+=", ");return o+="$. La matriz resultante después de los intercambios es:",this.print(o),this},sacarMultiplicadores:function(){for(var t,i="Se calculan los multiplicadores $m_{i "+(this.cont_j+1)+"}$ con $i = "+(this.cont_i+1+1)+", \\ldots, n$:",s=this.cont_i+1;s<this.A.length;s++)t=this.A[s][this.cont_j]/this.notZero(this.A[this.cont_i][this.cont_j]),this.multiplicadores.push(t),i+="\\begin{matrix}   m_{"+(s+1)+" "+(this.cont_j+1)+"} & = a_{"+(s+1)+" "+(this.cont_j+1)+"} / a_{"+(this.cont_i+1)+" "+(this.cont_j+1)+"} & = &\\frac{"+this.round(this.A[s][this.cont_j],1)+"}{"+this.round(this.A[this.cont_i][this.cont_j],1)+"} & = "+this.round(t,3)+" \\\\   \\end{matrix}";return this.print(i),this},sacarMatrizL:function(){for(var t,i="Se calculan los multiplicadores $l_{i "+(this.cont_i+1)+"}$ con $i = "+(this.cont_i+2)+", \\ldots, n$:<br>",s=[],o=0;o<this.A.length;o++)o==this.cont_i?s.push(1):o>=this.cont_i+1?(t=this.A[o][this.cont_j]/this.notZero(this.A[this.cont_i][this.cont_j]),s.push(t),this.multiplicadores.push(t),i+="\\begin{matrix} l_{"+(o+1)+" "+(this.cont_j+1)+"} & = a_{"+(o+1)+" "+(this.cont_j+1)+"} / a_{"+(this.cont_i+1)+" "+(this.cont_j+1)+"} & = & \\frac{"+this.round(this.A[o][this.cont_j],1)+"}{"+this.round(this.A[this.cont_i][this.cont_j],1)+"} & = "+this.round(t,3)+" \\\\ \\end{matrix}"):s.push(0);this.print(i);for(var o=0;o<s.length;o++)this.matrizL[o].push(s[o]);return this},eliminacionGaussiana:function(t){for(var i="Se calculan las nuevas filas de la matriz $Ab$, $F_i = F_i - m_{i "+(this.cont_j+1)+"}F_"+(this.cont_j+1)+"$ con $i = "+(this.cont_i+1+1)+", \\ldots, n$, con las siguientes operaciones:",s=0,o=0,n=this.cont_j;n<this.A.length;n++){for(var h=this.cont_i+1;h<this.A.length;h++)this.A[h][n]=this.A[h][n]-this.multiplicadores[s]*this.A[this.cont_i][n],s++,n==this.cont_j&&(i+="\\begin{matrix}  F_"+(h+1)+" & = & F_"+(h+1)+" - m_{"+(h+1)+" "+(this.cont_j+1)+"}F_"+(this.cont_j+1)+" \\\\  \\end{matrix}");s=0}if(!t)for(var h=this.cont_i+1;h<this.b.length;h++)this.b[h]=this.b[h]-this.b[this.cont_i]*this.multiplicadores[o],o++;return this.print(i),this},sustitucionRegresiva:function(t){var i;"A"==t?i=this.A:"U"==t&&(i=this.matrizU);var s,o,n=0,h=1,a=0;this.print("<h3>Sustitución regresiva</h3>");var r="",e="",c="";"A"==t?(this.print("El correspondiente sistema de ecuaciones de la matriz $Ab$ es decir $Ab"+this.etapaAb+"$ es:"),this.printAbEcuaciones()):"U"==t&&(this.print("El sistema $Ux=z$ coresponde al siguiente sistema de ecuaciones:"),this.printUEcuaciones());for(var l=i.length-1;l>=0;l--){l==i.length-1?this.print("Para resolver el sistema, se comienza por hallar primero $x_"+this.numeroColumna[l]+"$:"):this.print("Con el resultado de $x_"+this.numeroColumna[l+1]+"$ y la ecuación $"+(l+1)+"$ se calcula $x_"+this.numeroColumna[l]+"$:"),c="<div>$$\\begin{eqnarray} ","A"==t?c+=this.printAbEcuaciones(l)+" \\\\":"U"==t&&(c+=this.printUEcuaciones(l)+" \\\\"),e=""+this.b[l];for(var _=i[l].length-1;_>=0;_--)l==_?o=i[l][_]:(n+=i[l][_]*this.answer[h],this.answer[h]>0&&(r=i[l][_]>0?" - ":" + ",1!==i[l][_]?0!==i[l][_]&&(e+=" "+r+" "+Math.abs(i[l][_])+"("+this.answer[h]+") "):e+=" "+r+" ("+this.answer[h]+") "),h++);h=0,s=(this.b[l]-n)/this.notZero(o),this.answer[a]=s,c+=1!=o?" x_"+this.numeroColumna[l]+" & = & \\frac{"+e+"}{"+o+"}  \\nonumber \\\\ ":" x_"+this.numeroColumna[l]+" & = & "+e+"  \\nonumber \\\\ ",c+=" x_"+this.numeroColumna[l]+" & = & "+s+"  \\nonumber \\\\ ",e="",a++,n=0,c+="\\end{eqnarray}$$</div>",this.print(c)}return this.printSolucion(1),this.printSolucion(0),this},sustitucionProgresiva:function(){var t,i,s=0,o=1,n=0,h="",a="";this.print("<h3>Sustitución progresiva</h3>");var r="El sistema $Lz=B$ es el siguiente sistema de ecuaciones:";this.print(r),this.printLEcuaciones();for(var e="",c=0;c<this.matrizL.length;c++){0==c?this.print("Para resolver el sistema, se comienza por hallar primero $z_"+this.numeroColumna[c]+"$:"):this.print("Con el resultados de "+e+" y la ecuación $"+this.numeroColumna[c]+"$ se calcula $z_"+this.numeroColumna[c]+"$:"),e+="$z_"+this.numeroColumna[c]+"$, ",r="<div>$$\\begin{eqnarray} ",r+=this.printLEcuaciones(c)+" ",a=""+this.b[c];for(var l=0;l<this.matrizL[c].length;l++)c==l?i=this.matrizL[c][l]:(s+=this.matrizL[c][l]*this.b[o],0!==this.b[o]&&(h=this.matrizL[c][l]>0?" - ":" + ",1!==this.matrizL[c][l]?0!==this.matrizL[c][l]&&(a+=" "+h+" "+Math.abs(this.matrizL[c][l])+"("+this.b[o]+") "):a+=" "+h+" ("+this.b[o]+") "),o++);o=0,t=(this.b[c]-s)/this.notZero(i),this.b[n]=t,r+=1!=i?" z_"+this.numeroColumna[c]+" & = & \\frac{"+a+"}{"+i+"}  \\nonumber \\\\ ":" z_"+this.numeroColumna[c]+" & = & "+a+"  \\nonumber \\\\ ",r+=" z_"+this.numeroColumna[c]+" & = & "+t+"  \\nonumber \\\\ ",a="",n++,s=0,r+="\\end{eqnarray}$$</div>",this.print(r)}return this},croutMatrizL:function(t){for(var i,s=this.cont_j,o=t;o<this.A.length;o++){this.print(o-t+1+". Para hallar $l_{"+(o+1)+" "+(s+1)+"}$ se multiplica la fila "+(o+1)+" de $L$ por la columna "+(s+1)+" de $U$ y se iguala al elemnto $a_{"+(o+1)+" "+(s+1)+"}$. Entonces,");var n="<div>$$\\begin{eqnarray} ",h="",a="";i=0;for(var r=0;r<s;r++)i+=this.matrizL[o][r]*this.matrizU[r][this.cont_i],h+="("+this.matrizL[o][r]+") * ("+this.matrizU[r][this.cont_i]+")",a+="("+this.matrizL[o][r]*-1+") * ("+this.matrizU[r][this.cont_i]*-1+")",r<s-1&&(h+=" + ",a+=" - ");this.matrizL[o][s]=this.A[o][s]-i,""!=h?(n+=h+"+ l_{"+(o+1)+" "+(s+1)+"} * 1 & = & "+this.A[o][s]+"\\  \\\\",n+="l_{"+(o+1)+" "+(s+1)+"} & = & "+this.A[o][s]+" - "+a+"\\  \\\\",n+="l_{"+(o+1)+" "+(s+1)+"} & = & "+this.matrizL[o][s]+"\\  \\\\"):n+=" l_{"+(o+1)+" "+(s+1)+"} & = & "+this.A[o][s]+"\\  \\\\",n+="\\end{eqnarray}$$</div>",this.print(n)}return this},croutMatrizU:function(t){for(var i,s=t+1;s<this.A.length;s++){t<this.A.length-1&&this.print("Dado que la fila "+s+" de L ya se conoce completamente, entonces se multiplica la fila "+s+" de L con todas las columnas de U."),this.print(s-t+". Para hallar $u_{"+(t+1)+" "+(s+1)+"}$ se multiplica la fila "+(t+1)+" de $L$ por la columna "+(s+1)+" de $U$ y se iguala al elemnto $a_{"+(t+1)+" "+(s+1)+"}$. Entonces,");var o="<div>$$\\begin{eqnarray} ",n="",h="",a="";i=0;for(var r=0;r<this.cont_i+1;r++){i+=this.matrizL[this.cont_i][r]*this.matrizU[r][s],n+="("+this.matrizL[this.cont_i][r]+")",r<this.cont_i&&(h+="("+this.matrizL[this.cont_i][r]*-1+")");var e=this.matrizU[r][s];0!=e?(n+=" * ("+e+")",r<this.cont_i&&(h+=" * ("+e*-1+")")):a=this.matrizL[this.cont_i][r],r<this.cont_i&&(n+=" + ",r<this.cont_i-1&&(h+=" - "))}s!=this.cont_i&&(this.matrizU[this.cont_i][s]=(this.A[this.cont_i][s]-i)/this.notZero(this.matrizL[this.cont_i][this.cont_j])),o+=n+" * u_{"+(t+1)+" "+(s+1)+"} & = & "+this.A[t][s]+"\\  \\\\",o+="u_{"+(t+1)+" "+(s+1)+"} & = & \\frac{"+this.A[t][s],""!=h&&(o+=" - "+h),o+="}{"+a+"}\\  \\\\",o+="u_{"+(t+1)+" "+(s+1)+"} & = & "+this.matrizU[this.cont_i][s]+"\\  \\\\",o+="\\end{eqnarray}$$</div>",this.print(o)}return this},choleskyMatrizL:function(){for(var t,i,s=this.cont_i;s<this.A.length;s++){this.print(s-this.cont_i+1+". Para hallar $l_{"+(s+1)+" "+(this.cont_i+1)+"}$ se multiplica la fila "+(s+1)+" de $L$ por la columna "+(this.cont_i+1)+" de $U$ y se iguala al elemnto $a_{"+(s+1)+" "+(this.cont_i+1)+"}$. Entonces,");var o="<div>$$\\begin{eqnarray} ",n="",h="";t=0;for(var a=0;a<this.A[s].length;a++)0!=this.matrizL[s][a]&&0!=this.matrizU[a][this.cont_i]&&(n+="("+this.round(this.matrizL[s][a],4)+") * ("+this.round(this.matrizU[a][this.cont_i],4)+")",h+="("+this.round(this.matrizL[s][a]*-1,4)+") * ("+this.round(this.matrizU[a][this.cont_i]*-1,4)+")",a<this.cont_i-1&&(h+=" - ",n+=" + ")),t+=this.matrizL[s][a]*this.matrizU[a][this.cont_i];s!=this.cont_i?(this.matrizL[s][this.cont_j]=(this.A[s][this.cont_j]-t)/this.notZero(i),h=""!=h?" - "+h:"",""!=n&&(o+=n+" + l_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} * l_{"+(s+1)+" "+(this.cont_i+1)+"} & = & "+this.A[s][this.cont_i]+"\\  \\\\"),o+="l_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} * l_{"+(s+1)+" "+(this.cont_i+1)+"} & = & "+this.A[s][this.cont_i]+h+"  \\\\",o+=this.matrizL[this.cont_i][this.cont_i]+" * l_{"+(s+1)+" "+(this.cont_i+1)+"} & = & "+this.A[s][this.cont_i]+h+"  \\\\",o+="l_{"+(s+1)+" "+(this.cont_i+1)+"} & = & \\frac{"+(this.A[this.cont_i][this.cont_j]-t)+"}{"+this.matrizL[this.cont_i][this.cont_i]+"} \\\\",o+="l_{"+(s+1)+" "+(this.cont_i+1)+"} & = & "+this.matrizL[s][this.cont_i]+"\\  \\\\"):(i=Math.pow(this.A[this.cont_i][this.cont_j]-t,.5),this.matrizL[this.cont_i][this.cont_j]=i,this.matrizU[this.cont_i][this.cont_j]=i,h=""!=h?" - "+h:"",""!=n&&(o+=n+" + l_{"+(s+1)+" "+(this.cont_i+1)+"} * l_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} & = & "+this.A[s][this.cont_i]+"\\  \\\\"),o+="l_{"+(s+1)+" "+(this.cont_i+1)+"} * l_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} & = & "+this.A[s][this.cont_i]+h+"  \\\\",o+="l_{"+(s+1)+" "+(this.cont_i+1)+"}^2 & = & "+this.A[s][this.cont_i]+h+" \\\\",o+="l_{"+(s+1)+" "+(this.cont_i+1)+"} & = & \\sqrt[2]{"+this.A[s][this.cont_i]+h+"} \\\\",""!=h&&(o+="l_{"+(s+1)+" "+(this.cont_i+1)+"} & = & \\sqrt[2]{"+(this.A[this.cont_i][this.cont_j]-t)+"} \\\\"),o+="l_{"+(s+1)+" "+(this.cont_i+1)+"} & = & "+this.matrizL[s][this.cont_i]+"\\  \\\\"),o+="\\end{eqnarray}$$</div>",this.print(o),i=this.matrizL[this.cont_i][this.cont_j]}return this},choleskyMatrizU:function(){for(var t,i=this.matrizU[this.cont_i][this.cont_j],s=this.cont_i+1;s<this.A.length;s++){this.cont_i<this.A.length-1&&this.print("Dado que la fila "+s+" de L ya se conoce completamente, entonces se multiplica la fila "+s+" de L con todas las columnas de U."),this.print(s-this.cont_i+". Para hallar $u_{"+(this.cont_i+1)+" "+(s+1)+"}$ se multiplica la fila "+(this.cont_i+1)+" de $L$ por la columna "+(s+1)+" de $U$ y se iguala al elemnto $a_{"+(this.cont_i+1)+" "+(s+1)+"}$. Entonces,");var o="<div>$$\\begin{eqnarray} ",n="",h="",a="";t=0;for(var r=0;r<this.cont_i+1;r++)0!=this.matrizL[this.cont_i][r]&&0!=this.matrizU[r][s]&&(n+="("+this.round(this.matrizL[this.cont_i][r],4)+") * ("+this.round(this.matrizU[r][s],4)+")",h+="("+this.round(this.matrizL[this.cont_i][r]*-1,4)+") * ("+this.round(this.matrizU[r][s]*-1,4)+")",r<this.cont_i-1&&(h+=" - ",n+=" + ")),a=this.matrizL[this.cont_i][r],t+=this.matrizL[this.cont_i][r]*this.matrizU[r][s];s!=this.cont_i&&(this.matrizU[this.cont_i][s]=(this.A[this.cont_i][s]-t)/this.notZero(i)),n=""==n?"":n+" + ",h=""==h?"":" - "+h,o+=n+" l_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} * u_{"+(this.cont_i+1)+" "+(s+1)+"} & = & "+this.A[this.cont_i][s]+"\\  \\\\",o+="l_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} * u_{"+(this.cont_i+1)+" "+(s+1)+"} & = & "+this.A[this.cont_i][s]+h+"\\  \\\\",o+=this.matrizL[this.cont_i][this.cont_i]+" * u_{"+(this.cont_i+1)+" "+(s+1)+"} & = & "+this.A[this.cont_i][s]+h+"\\  \\\\",o+="u_{"+(this.cont_i+1)+" "+(s+1)+"} & = & \\frac{"+(this.A[this.cont_i][s]-t)+"}{"+a+"}\\  \\\\",o+="u_{"+(this.cont_i+1)+" "+(s+1)+"} & = & "+this.matrizU[this.cont_i][s]+"\\  \\\\",o+="\\end{eqnarray}$$</div>",this.print(o)}return this},doolittleMatrizL:function(){for(var t,i=this.cont_i+1;i<this.A.length;i++){this.print(i-this.cont_i+1+". Para hallar $l_{"+(i+1)+" "+(this.cont_i+1)+"}$ se multiplica la fila "+(i+1)+" de $L$ por la columna "+(this.cont_i+1)+" de $U$ y se iguala al elemnto $a_{"+(i+1)+" "+(this.cont_i+1)+"}$. Entonces,");var s="<div>$$\\begin{eqnarray} ",o="",n="";t=0;for(var h=0;h<this.cont_i;h++)o+="("+this.matrizL[i][h]+") * ("+this.matrizU[h][this.cont_i]+")",n+="("+this.matrizL[i][h]*-1+") * ("+this.matrizU[h][this.cont_i]*-1+")",h<this.cont_i-1&&(o+=" + ",n+=" - "),t+=this.matrizL[i][h]*this.matrizU[h][this.cont_j];i!=this.cont_i&&(this.matrizL[i][this.cont_j]=(this.A[i][this.cont_j]-t)/this.notZero(this.matrizU[this.cont_i][this.cont_j])),""!=o?(s+=o+"+ u_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} * l_{"+(i+1)+" "+(this.cont_i+1)+"} & = & "+this.A[i][this.cont_i]+"\\  \\\\",s+="u_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} * l_{"+(i+1)+" "+(this.cont_i+1)+"} & = & "+this.A[i][this.cont_i]+" - "+n+"\\  \\\\",s+=this.matrizU[this.cont_i][this.cont_j]+" * l_{"+(i+1)+" "+(this.cont_i+1)+"} & = & "+this.A[i][this.cont_i]+" - "+n+"\\  \\\\",s+="l_{"+(i+1)+" "+(this.cont_i+1)+"} & = & \\frac{"+(this.A[i][this.cont_j]-t)+"}{"+this.matrizU[h][this.cont_j]+"}\\  \\\\",s+="l_{"+(i+1)+" "+(this.cont_i+1)+"} & = & "+this.matrizL[i][this.cont_i]+"\\  \\\\"):(s+="u_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} * l_{"+(i+1)+" "+(this.cont_i+1)+"} & = & "+this.A[i][this.cont_i]+"\\  \\\\",s+="l_{"+(i+1)+" "+(this.cont_i+1)+"} & = & \\frac{"+(this.A[i][this.cont_j]-t)+"}{"+this.matrizU[h][this.cont_j]+"}\\  \\\\",s+="l_{"+(i+1)+" "+(this.cont_i+1)+"} & = & "+this.matrizL[i][this.cont_i]+"\\  \\\\"),s+="\\end{eqnarray}$$</div>",this.print(s)}return this},doolittleMatrizU:function(){for(var t,i=this.cont_j,s=this.cont_i;s<this.A.length;s++){t=0,this.print(s-this.cont_i+". Para hallar $u_{"+(this.cont_i+1)+" "+(s+1)+"}$ se multiplica la fila "+(this.cont_i+1)+" de $L$ por la columna "+(s+1)+" de $U$ y se iguala al elemnto $a_{"+(this.cont_i+1)+" "+(s+1)+"}$. Entonces,");for(var o="<div>$$\\begin{eqnarray} ",n="",h="",a=0;a<this.A[s].length;a++)0!=this.matrizL[this.cont_i][a]&&0!=this.matrizU[a][s]&&(n+="("+this.round(this.matrizL[this.cont_i][a],4)+") * ("+this.round(this.matrizU[a][s],4)+")",h+="("+this.round(this.matrizL[this.cont_i][a]*-1,4)+") * ("+this.round(this.matrizU[a][s]*-1,4)+")",a<this.cont_i-1&&(h+=" - ",n+=" + ")),t+=this.matrizL[this.cont_i][a]*this.matrizU[a][s];this.matrizU[i][s]=this.A[i][s]-t,n=""==n?"":n+" + ",h=""==h?"":" - "+h,""!=n&&(o+=n+" l_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} * u_{"+(this.cont_i+1)+" "+(s+1)+"} & = & "+this.A[this.cont_i][s]+"\\  \\\\"),o+="l_{"+(this.cont_i+1)+" "+(this.cont_i+1)+"} * u_{"+(this.cont_i+1)+" "+(s+1)+"} & = & "+this.A[this.cont_i][s]+h+"\\  \\\\",o+=this.matrizL[this.cont_i][this.cont_i]+" * u_{"+(this.cont_i+1)+" "+(s+1)+"} & = & "+this.A[this.cont_i][s]+h+"\\  \\\\",o+="u_{"+(this.cont_i+1)+" "+(s+1)+"} & = & "+this.matrizU[this.cont_i][s]+"\\  \\\\",o+="\\end{eqnarray}$$</div>",this.print(o)}return this},round:function(t,i){var s=Math.pow(10,i||0);return Math.round(t*s)/this.notZero(s)},notZero:function(t){if(t=+t,!t)throw new Error("División por cero");return t}};t.prototype.mayor=s.mayor,t.prototype.mayorFila=s.mayorFila,t.prototype.mayoresDeFilas=s.mayoresDeFilas,t.prototype.resultados=s.resultados,t.prototype.cambioFilas=s.cambioFilas,t.prototype.cambioColumnas=s.cambioColumnas,t.prototype.sacarMultiplicadores=s.sacarMultiplicadores,t.prototype.sacarMatrizL=s.sacarMatrizL,t.prototype.croutMatrizL=s.croutMatrizL,t.prototype.croutMatrizU=s.croutMatrizU,t.prototype.eliminacionGaussiana=s.eliminacionGaussiana,t.prototype.sustitucionProgresiva=s.sustitucionProgresiva,t.prototype.sustitucionRegresiva=s.sustitucionRegresiva,t.prototype.createTable=s.createTable,t.prototype.choleskyMatrizL=s.choleskyMatrizL,t.prototype.choleskyMatrizU=s.choleskyMatrizU,t.prototype.doolittleMatrizL=s.doolittleMatrizL,t.prototype.doolittleMatrizU=s.doolittleMatrizU,t.prototype.round=s.round,t.prototype.notZero=s.notZero}(Sistema);